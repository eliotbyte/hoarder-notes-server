kind: pipeline
type: docker
name: build_and_deploy

steps:
  # STEP 1: Build images using docker-compose build
  - name: docker_compose_build
    image: docker:23
    environment:
      APP_PORT:
        from_secret: APP_PORT
      JWT_SECRET:
        from_secret: JWT_SECRET
      POSTGRES_USER:
        from_secret: POSTGRES_USER
      POSTGRES_PASSWORD:
        from_secret: POSTGRES_PASSWORD
      POSTGRES_DB:
        from_secret: POSTGRES_DB
      DB_PORT:
        from_secret: DB_PORT
      POSTGRES_DATA_PATH:
        from_secret: POSTGRES_DATA_PATH
    volumes:
      - name: docker_socket
        path: /var/run/docker.sock
    commands:
      - docker-compose build

  # STEP 2: Start the database separately, run the app once for migrations, and then shut everything down
  - name: run_migrations
    image: docker:23
    environment:
      APP_PORT:
        from_secret: APP_PORT
      JWT_SECRET:
        from_secret: JWT_SECRET
      POSTGRES_USER:
        from_secret: POSTGRES_USER
      POSTGRES_PASSWORD:
        from_secret: POSTGRES_PASSWORD
      POSTGRES_DB:
        from_secret: POSTGRES_DB
      DB_PORT:
        from_secret: DB_PORT
      POSTGRES_DATA_PATH:
        from_secret: POSTGRES_DATA_PATH
    volumes:
      - name: docker_socket
        path: /var/run/docker.sock
    commands:
      # 2.1. Start only the db
      - docker-compose up -d db
      # 2.2. Run migrations: start the app container in one-off mode using `run --rm`
      - docker-compose run --rm app npx ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:run -d ./data-source.ts
      # 2.3. After running migrations, shut everything down to start fresh in the next step
      - docker-compose down

  # STEP 3: Now start the full application (db + app)
  - name: docker_compose_up
    image: docker:23
    environment:
      APP_PORT:
        from_secret: APP_PORT
      JWT_SECRET:
        from_secret: JWT_SECRET
      POSTGRES_USER:
        from_secret: POSTGRES_USER
      POSTGRES_PASSWORD:
        from_secret: POSTGRES_PASSWORD
      POSTGRES_DB:
        from_secret: POSTGRES_DB
      DB_PORT:
        from_secret: DB_PORT
      POSTGRES_DATA_PATH:
        from_secret: POSTGRES_DATA_PATH
    volumes:
      - name: docker_socket
        path: /var/run/docker.sock
    commands:
      - docker-compose up -d

volumes:
  - name: docker_socket
    host:
      path: /var/run/docker.sock

trigger:
  branch:
    - main
  event:
    - push
    - custom
